package certs

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _insecure_key_pem = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x97\xb5\x0e\xe4\x00\xb6\x05\x73\x7f\xc5\xe4\xd6\x93\xa9\x4d\xc1\x0b\xcc\x6d\x6e\x33\x64\x66\x66\xf6\xd7\xaf\x66\xb4\xe1\xde\xf4\x66\xa5\x0a\x4e\xfd\xdf\xdf\x63\x05\x49\x36\xfe\xd8\x0e\xf3\xe7\x67\xcb\x3e\xe3\x0a\x7f\x54\x21\xfa\xf7\x01\x74\x59\x56\x54\x46\x66\x19\x46\xe5\x98\x4a\x60\xb6\x8c\x2b\x88\x1a\x3f\x88\x7e\xae\xed\x9a\x55\xd0\x94\x1e\x86\xe4\xe4\xe2\xc8\xb6\x6d\x66\x72\xd6\x16\x61\xd9\xeb\xda\x2e\x58\x1a\x7a\x31\xd1\x01\x94\x95\x15\x6f\xcc\xc9\x0e\x15\x36\x23\xd8\x2c\x7b\xc8\x05\x38\xaf\x9a\x64\xab\x9d\x7a\xe8\x03\x36\x88\x65\xfc\x58\xef\xc1\xc2\x62\x90\xf8\x09\xa6\x5d\x1a\xec\x41\x87\x4a\xe5\x0c\x93\xe9\xf2\x40\xdd\x5c\xba\xf7\x1b\x4d\x68\x47\x8a\xa3\xf8\xb2\x85\xd5\x75\xe8\x82\xba\x39\x59\x90\xba\xcb\xe7\x37\xa6\x0f\x6a\xc6\x06\x9e\xf4\xce\x05\x65\x6c\xbd\x0d\xb2\x17\xb9\xce\x45\xc3\x83\xd7\xe6\x50\x40\x7e\x1f\xb1\x80\xdf\x2d\x35\xe0\x89\xec\xc0\x2f\xe9\xc2\x53\x3b\xf8\x74\x3d\x53\x42\x35\xc5\xd4\x82\x98\xcb\x79\x7a\x35\x4d\x3b\xfc\x90\xa2\x55\x7e\xd0\x85\x92\xfb\x1a\x16\x76\x74\xe8\x8e\x0a\xe0\x8d\xf7\xb8\x53\xf4\x38\xb5\x95\x6f\xd3\x18\x6c\xba\x66\x98\x14\x70\x1e\xf4\x0e\x55\xbf\xd9\x13\x95\x77\x43\xa0\x13\x7f\x86\x3e\x09\x8b\x99\x66\x6f\xe4\xfa\x8c\x06\x05\x3b\x2a\x26\xc8\x77\x0c\x44\x53\x8d\x2a\x17\xf9\xbc\x54\x30\x34\x0e\x8a\x55\x1c\x28\xcd\x37\x3c\x7c\xce\x5c\x63\x85\x0e\xa3\xec\xa8\xbf\x8a\x47\x35\x0e\x2a\x62\xf2\x5a\xb3\x5b\xae\x79\x59\x18\x0b\x17\xb1\x8a\x7b\x4e\x06\x40\xf7\xbb\x2a\x19\xfb\x4d\x78\xf6\x78\xda\x01\xda\x3e\x9e\xca\xd2\xcb\x28\x37\x89\x9e\xee\xd4\x38\xa0\x4c\xb0\xd1\x72\xa3\xdd\x4f\x17\x9c\x0f\x98\x15\x6e\x42\xc9\xaa\xba\xc5\x97\x20\xd2\x17\x02\xdc\x42\x30\x3f\xd8\x49\xee\xfa\xd2\x41\x15\x85\xb4\x87\x2b\x9f\x96\x87\x7a\x82\x38\xc9\x71\x20\x2f\x6c\x63\xce\xc2\xe7\xdb\x5b\xdc\x59\x74\x3a\x99\x0f\x6b\x98\x8e\x13\x66\xcc\x66\x92\xe5\x86\x03\xfc\xd2\xde\x44\x77\xd1\x31\xc4\xa5\xbc\x57\x79\xcc\x0e\x63\xb7\x15\xe3\x26\x98\x08\xcc\xc2\x99\xed\x2c\xe1\x85\xfc\xf7\x9d\x45\x5c\x8a\xb4\x49\x11\x32\x7c\x10\x0b\x4e\xee\xfd\xc5\xe5\x7e\x94\x0b\xd4\x77\x25\x3b\xc4\xf2\xdb\x90\x17\xfe\x55\xac\xda\x05\xd4\x9c\x26\xe4\x36\x5f\x76\x44\xcd\x19\x1f\xae\x45\x47\xc6\x4e\xdd\xc8\xf9\xdd\x43\x44\xf3\xd6\xed\xd2\x5b\x9b\x54\xb1\x4b\x40\x85\x55\x0a\x50\xf3\x25\xa2\x66\x63\x88\x58\x8b\x27\xfe\x8e\xa4\x09\xdd\x14\x90\xa0\x40\x2d\x04\x25\xde\xa0\xf9\xa3\x5e\xd5\xaa\x1a\x55\x97\xc0\x6b\xde\x4e\xdc\x1a\xc2\x35\xcd\x17\x2f\x70\x8f\x63\x2e\x81\x01\x18\xeb\xaf\xc2\xec\xd5\x4f\xb5\x8d\x28\x2b\xd8\x83\x09\x69\xb9\x10\xf2\x20\xbe\xda\x6c\x60\xc7\x7d\x08\xe5\xe3\x1a\x38\x4e\x3b\x6e\xe3\x9a\xbd\x96\x78\xd4\xd0\x48\x28\x3f\x13\x01\xa4\xf8\x0b\x50\x45\xb9\xc4\xcc\x68\x9c\x8c\x63\xfe\x1a\xd0\x48\x39\xbc\x5e\x89\x21\xa9\xe1\xd2\x77\xe9\x75\xde\xaf\x25\x2c\xf2\x38\xfa\xb6\x9c\x78\x38\x26\x36\x21\x17\xb2\x90\xb7\x4c\x69\xed\x84\xa8\x99\x1a\xb8\xf4\x72\xb1\x61\x53\x7b\x13\x6c\xf6\x5c\xfc\x06\x2f\x1a\xeb\x4b\x1d\xe6\xad\xa7\xd3\x50\x82\x1a\x25\x90\xcc\xa8\x49\xfe\xce\x90\xce\x78\x30\xd6\x7a\xce\xf5\x60\xf3\x35\x3c\x3b\xd6\x62\x0f\x0f\x28\x30\x77\x17\xbf\x5c\x12\xe6\xef\x74\x30\xf2\xee\x96\xa1\xe4\xbd\x99\xa9\x97\x68\x8c\x29\x2f\x11\x0b\x0a\x2f\x72\x75\xd2\xba\x08\xc8\xbd\x34\x92\x57\x7c\xe8\x1f\x58\x46\x49\x68\xbf\x29\x33\x05\x20\x6b\xb6\x31\xee\x9e\x6a\x8c\xc4\x8a\x04\x91\x50\x54\xce\x55\x9d\x2b\x27\xf9\xd1\x68\x88\xe8\x2b\x26\x93\xc0\x64\x61\xbf\x4f\xbb\x61\x10\x08\x87\x2c\x24\xfd\x64\x10\x49\xd4\x6a\xe0\x61\xad\x04\x8c\x7c\x57\xbc\x69\xe5\x6b\x3a\x5d\xd3\xdf\x53\x76\x5f\xc9\xdb\x86\x32\x5d\x0b\xd5\xaf\x11\x7b\xc3\x0f\xde\x57\xeb\x03\x7f\x12\x61\x15\xa6\xec\x2e\x50\x8f\xa4\x9d\x77\xf5\x9f\x82\x9f\xec\xc9\x03\x18\x2a\x00\x8f\x60\xaf\x36\x0e\xe1\x70\xae\x73\x02\x25\x74\x4c\x75\xd3\x0d\xb5\xcd\x92\x85\x42\x85\xf9\x86\x10\x5d\x84\x66\x33\xd9\x6d\xf4\x00\xf1\xd4\x54\xf1\x62\x43\xeb\xb5\x15\x2d\x2e\xc2\x01\x7e\x68\x7a\xbd\x69\xd4\xc2\x55\xd5\xdf\xfc\xd5\xfd\xba\xa9\x45\x84\x5a\x7d\x79\xc8\xba\x44\x2f\x37\x02\x63\x55\xc1\x1a\x97\x3c\x23\xa6\x43\x8c\xde\x10\x75\x63\xbb\xe0\x7e\x60\xb9\xb3\x49\x6d\x03\xae\x5e\x5f\xa1\xa5\xaf\xc5\x87\x44\xb9\x2e\x6f\x96\xb7\xdf\x28\x2a\xda\xd2\xae\x28\xdc\xc1\xe4\xf9\x69\x16\x99\x05\x72\xeb\xca\x43\xa4\x8b\x2a\x26\xd9\x34\x6c\xeb\xf3\x49\x12\x9d\x11\x3f\x61\x00\x6c\xe6\xce\xdc\xf7\xe6\xc2\x5f\xb9\xd3\x10\x85\xa4\x8f\xb6\xb7\x16\x73\xa6\x82\x04\x9a\x08\x1b\x14\xf8\xeb\x20\xc4\x97\x0d\xd3\xdc\x6d\x63\x9f\x5c\x72\x9e\x79\xb8\x1a\x4f\xad\x28\x3f\x52\x0f\x01\x1e\x4f\xef\x10\x79\x3c\xbc\xf8\x1a\x10\xdf\x3a\x20\xf8\x13\x08\xfe\xba\x2b\x05\x78\x4f\x5d\x7d\xa4\x0e\xc2\x54\x34\xd4\x41\x12\xb2\x95\x70\x21\x7f\xfe\x9a\x6b\x09\x0c\x3a\x2b\x2f\x1e\x3e\x33\xa0\x2d\xf2\x0f\x2f\x2d\xae\xdd\xac\xc2\xe6\x3a\xbb\xf1\x60\x04\x19\x77\x0d\x59\x32\xd5\xb4\xbf\xfb\x36\x50\x6b\x52\x2f\x0c\x6e\xa4\x0b\x8e\x6c\x91\xfd\xf4\xa2\x94\x7e\xcd\xaa\x8b\xba\x77\x8e\x6f\x80\xd3\x6f\x6c\xc3\x36\xa7\x9b\x14\x65\x63\x41\x58\x80\x1d\x6d\x9b\x2e\xe8\x90\x63\x26\xd5\xe1\x7e\xee\x8f\xa3\xc0\x74\xdb\x9c\xb3\xc9\x6c\x3f\x3f\xf8\xe3\xaa\x04\x77\xf4\xbf\xef\xd5\xec\xb9\xa1\x03\x5e\xf8\xb5\x55\x24\x27\xcf\x4b\xd3\x06\xbd\x1f\xbe\x2c\xb8\xd2\xa4\x4f\x9b\xc4\x5d\x77\xa7\xda\xee\x87\xe4\xd3\x12\x8e\x84\xaf\xe2\x92\x39\x08\x35\x92\x3e\xb1\xd7\x2b\xe2\x0a\x53\x9f\xd3\xaf\x06\xc4\x18\x79\x0a\x72\xfc\x2a\xdf\xba\xe3\x1e\x65\x47\xe8\x45\x32\x54\x88\x25\x31\x94\xd3\x0f\xda\x96\xcb\x7a\x83\x8c\xb2\x27\xdf\xba\xb7\x9f\xd4\x37\x7e\xe0\x2e\x1c\xc5\x8f\x14\xd3\xf7\x48\x90\x09\x38\x66\xd3\xcc\x9c\x4f\x24\x9a\x66\x3d\x25\xe3\xdc\xc7\x90\xdc\x35\x9e\xa9\xa4\xab\x85\x6f\x3b\x26\xb8\x58\x9b\xb3\x30\x15\x1b\x09\x5d\xf0\x37\x11\x25\x86\xdf\x25\xc8\x4a\x49\x72\x79\xe5\x1f\x02\x60\x7b\x95\x6a\x40\x3b\x11\xc0\x44\x04\xff\x4b\x18\xe6\x79\xb6\x27\x95\x67\xfa\x30\xef\x0a\x2a\x51\xb1\x12\xe7\xad\xb2\x28\x9d\xcc\x88\xf7\x62\x23\x4a\xb3\xc3\x75\x8c\x85\xa2\xf1\x06\x00\x35\x37\x57\x99\xda\xad\x94\x52\x29\x2b\x74\x8b\xa6\x31\x1f\x85\x4c\x3c\x1a\xaa\x5a\xcd\x9f\x52\x8e\x0a\x51\xe2\x17\xda\xde\x83\xf7\x6d\x8f\x72\xc2\x70\xf1\xeb\xb5\x88\x9d\x26\xc5\x92\x48\x19\x10\x26\x74\xa1\x9b\x72\x49\x6b\x1b\xcc\x47\xea\xcc\x9c\xc2\x95\x40\x37\xf1\x81\xf2\x76\xa3\x0d\x8f\x65\xde\xb8\xc9\x46\xa7\xbb\xa9\xf6\x42\x78\xda\x12\xfb\x76\xec\x43\x3e\xb8\x6a\xb0\x31\x90\x11\x10\x48\x6d\x40\x87\x8b\x84\xb6\x31\x14\x8d\x2b\xbd\x47\x2c\x82\x10\x49\x49\x44\x7e\x96\xdd\x02\x6d\xe5\xe6\x60\x17\x44\xe6\xb2\x6f\xdb\x1b\xa6\xf3\x3b\xe9\x37\x64\x75\xdd\x6e\x29\x4e\xf6\xcd\x12\x28\xb2\xa7\xed\x23\xf1\x27\x27\x1e\x26\xd7\xae\xc2\xc7\xb8\x3c\x25\x77\xd6\x3c\x11\x1b\x56\xcf\xe9\x25\xbf\x72\xeb\x34\x38\xca\x2e\x1e\xa6\x1e\x42\xb0\x03\x2e\x59\xcc\x91\xf4\x67\x22\xda\xcb\x05\x50\xdf\xc6\x22\x12\x11\x2f\xc8\x80\x0d\x6a\xb3\x4d\x44\x6c\x2f\xe8\x67\x94\xb7\x6c\x78\xc4\xc3\x88\xe5\xe3\x72\xb8\x35\x2e\xff\x01\x66\x26\x9d\xed\x5b\x6d\x51\x3b\x78\x30\x68\x6a\x1c\x76\x80\xe8\x91\xc3\x3e\x52\xaf\x29\x21\x49\x2d\xc5\xfd\x15\x5d\x07\x0b\x37\x19\x2a\x4e\x6d\x94\xcb\xa5\x21\xa4\x3b\x14\x1e\xa6\xb0\xad\xbc\x44\xc2\x55\xaa\x89\x20\x8e\xc8\x93\x71\xfb\x58\x31\xb0\x15\xf0\x3b\x24\x31\xf6\xc9\x0d\x0c\xb8\x38\x1d\xd2\xd1\x74\x38\xdc\xf9\xa6\xa6\xc1\x80\xe7\xbc\x0d\x5b\xd5\x3c\xc0\x9a\x78\x78\xe8\x51\xe3\xa6\x3d\xd7\x12\x6c\x53\xd4\x02\x5f\x8a\x80\xbe\xc5\x4f\x02\xc4\x7b\xb6\xd5\xd3\x5e\xbf\x52\xc7\xa8\xda\x13\xb1\x1d\xc3\xf5\x3b\xf1\x35\x48\x6a\x5b\x85\xa5\xcb\x84\x85\x73\x84\x23\x37\x9a\x4f\x4a\xa6\xbb\xa1\xb8\xdb\xf9\x1d\x6e\x22\x3c\x55\x0c\xb6\x53\x13\x18\xe8\x0b\x37\x40\xb1\x28\x4c\x54\xd6\x46\x5e\x56\xeb\xc1\x8a\x21\xdb\x82\x54\x9c\x8e\x8f\x17\x54\x1d\x7c\x60\xb4\xb3\x80\xf4\x93\x47\xd9\x5f\x96\xae\xf5\x5e\x85\xe9\xa2\xc0\x7b\x59\x31\xd7\x0c\x14\x77\xf7\x50\xfd\xdb\xd4\x50\x23\xd1\x13\x4c\x87\x6b\x54\x04\x61\x6a\x0b\x9b\xac\xb4\x21\x11\x5a\xe0\x53\x14\x3f\x06\xea\xf1\x25\x51\xbf\x6b\xf2\xab\x59\xea\x3a\x25\xc1\x65\x3f\x0d\x3c\x43\x22\x10\xfe\x8c\x9b\x99\xfe\xae\xb4\xab\x69\xd0\xe8\x63\xc8\xf8\xaa\xcd\x95\x4f\x06\x73\xa2\x5e\x4f\x01\xe5\x4c\x0a\x62\x2a\xb1\x5a\x5e\xc8\xaa\x71\x09\x23\xe4\xe7\x0b\x0f\x7b\xb6\x69\x53\x8e\x61\x0b\xb0\x7d\xca\xaf\x35\x13\x0f\x6f\x19\x1d\xe5\x77\xe0\x29\x5d\xd1\x84\x40\x1d\xd5\x0b\xae\x89\xc2\x75\x4b\xfa\xf8\xca\xd7\x67\x4c\x42\xf3\x4f\x57\xcf\xb2\xaf\x74\x0c\xbb\x87\x42\xda\x14\xe6\x39\x3d\x60\x8d\x2b\x9d\x49\x42\xd4\xb2\x6a\xd5\x7b\xe8\xa3\x62\x3d\xc8\xe2\xe6\xcd\xf6\xbf\xe6\x99\x19\x7b\xe7\x5e\xbe\x25\xa1\xe4\xc3\x12\x68\x63\x35\x4a\xd0\xa6\xb2\xf0\x8b\x64\xf0\xf3\xfb\x5e\x70\x4e\x00\xb3\xb8\x4a\x44\x52\xe8\x46\x1f\x6a\xe5\xa1\xd5\xfb\xd7\xfb\x1a\x3d\xcf\xed\x9b\xec\x61\xf8\x64\x43\x37\x76\xcf\x77\x93\x51\x2f\x7b\x1c\xd4\xbd\xc5\x54\x5e\xd7\xd2\x67\xe6\x50\xe8\xcc\xe3\xde\x03\x32\xe8\x43\xb5\xe0\xf1\x75\xfa\x87\x93\x30\xcd\x22\x84\x1d\x92\xb2\x96\xca\x44\xe9\xbb\x46\x24\x72\xf9\x46\xfa\xfd\x20\x61\x88\x13\xe7\x84\x7c\x86\x08\xfa\x05\x60\x65\x70\xa4\x4e\xdf\x71\x45\xa7\x00\x61\xcd\xbc\xb0\xe5\x52\xd7\xc1\x35\x85\x5e\xdf\x9a\xa0\x0e\xf6\xfc\xd9\x91\xd2\x79\x76\x2f\x70\x55\x25\xb0\x8c\xfa\x39\xd5\x19\x0a\xd4\xf3\x77\x48\x85\xa6\xb0\x9e\x2c\x72\x1d\xdc\xe5\x16\x1e\x02\xb8\xa3\x19\x10\x1c\xaf\x2b\x03\x09\xe7\xba\x62\x8e\x1e\x3b\x76\x46\x06\xcb\xa5\xf7\x8e\xe2\xef\xeb\xa8\x44\xd2\x2b\xb4\x02\x04\x6b\x1f\x52\x4b\xc2\xfe\xca\xe8\x60\xb5\x72\x11\x5b\x47\x7c\x0d\x00\x3a\x84\xbe\x76\x52\xd2\x54\xc8\x40\xb9\x15\xc5\x6b\xc4\xcc\xb8\x00\x2a\x22\x85\x43\xf7\x74\x3e\x2a\xaf\xf0\xd7\xca\x20\xe4\xc1\xcc\xe9\x16\x48\xba\x7c\x4f\x91\xb3\xea\x7a\xdd\x3e\xcf\xa1\x2a\x40\x09\xc7\x03\x99\x2c\x1c\x33\xcc\x63\x2d\xed\xa6\xa0\xf5\x05\x53\x30\x25\xa2\x7e\xfa\xf9\x76\xa9\x3e\xa9\xb4\x4b\x66\x1f\xc7\x3e\x99\x3b\x2d\x73\x35\x44\xed\xf2\x8e\x83\xd9\x28\xb3\x8a\xe5\x3b\x60\x55\x4f\x83\x92\x84\xe4\x40\x5a\xda\xf2\xa7\x49\x42\xeb\x92\xf1\x07\x37\x14\x68\x08\x2d\xbc\x53\x8f\xad\x11\x87\x0d\x91\x30\xcf\xce\xd9\x7e\x89\x47\xc0\x50\x6e\xf0\x8b\x47\x35\xe2\x87\xe4\x3d\x00\x99\x79\x50\x89\x59\x73\x16\xa3\x8b\x7f\x11\x56\xf9\x94\x54\xac\x3e\x9e\x27\x98\xba\x0b\x31\x15\xc4\xf4\xa3\x96\xe5\x9e\xbf\x38\x66\xb7\xda\x63\xb4\x91\x01\xb9\x37\x03\xda\x46\xff\x0f\xfc\x4b\x0e\xc1\xe0\xff\x77\x8a\xfc\x27\x00\x00\xff\xff\x13\xc8\x88\xd4\xab\x0c\x00\x00")

func insecure_key_pem() ([]byte, error) {
	return bindata_read(
		_insecure_key_pem,
		"insecure-key.pem",
	)
}

var _insecure_csr = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd5\xb7\xce\xab\x50\x16\x86\xe1\x9e\xab\x38\xbd\x35\x22\x19\x30\xe5\x26\x67\xd8\x64\xe8\x00\x63\x82\xc9\x26\x5f\xfd\x68\xfe\x7e\x56\xfb\x2c\xe9\x2b\xdf\xff\xfc\xef\x38\x51\x56\xad\x7f\xbc\xe8\xfa\xaa\xa4\xf2\xc0\x17\xff\xb9\x22\x0c\x44\xcf\xff\x53\xc4\x54\x55\x91\x16\x78\x1e\xac\x80\x07\x10\x1c\x55\xa6\x9e\xfc\x0d\x34\xae\xb2\x42\x0e\x24\x3e\xe8\x42\xdf\x74\xcd\x43\x84\x89\x10\x42\xa8\x8a\xc7\x24\x24\xd1\x39\xa5\x3d\x7b\xe5\x7d\x57\x23\xa6\x9b\x1c\x12\xf8\x43\x45\x3c\x70\x3f\x89\x9e\x95\x3b\x68\x75\xde\x5b\x53\x41\x58\xbb\xe9\x62\x87\x7c\xfc\xb9\x2e\x9e\xae\x96\x0f\x56\x97\x90\xe1\x95\x7a\x9c\x90\xc6\x1a\x86\x64\x51\x3a\x25\x84\x84\xa5\xbe\xb8\x9a\xfc\x4f\x06\x78\x20\xf2\xa7\xf9\x75\x7b\xf6\x52\x25\xee\xca\xe2\xb4\x7e\xcb\x41\xe5\xcb\x6c\x9b\x44\x47\x05\x09\x76\xcd\xe3\x70\xcb\x22\xab\x7e\xcb\xdd\x8e\xe4\x0d\xe7\xe4\xfd\x49\x99\x6e\x75\x48\xd5\xdf\x92\x20\x1e\xec\x2f\x27\xac\x3a\x97\xeb\xbd\x20\x21\x6d\xfa\xe0\xb0\x05\x70\x54\x95\xda\x98\x00\x93\x79\x6f\x96\x3d\x35\x27\x05\x28\x72\x08\x80\x01\x00\x4f\x95\x17\x8e\xbf\x07\x1d\x8c\x2a\x0f\x20\x7f\x1e\x1a\x33\x2b\x3d\x33\x47\xbd\x24\x8b\xe2\x90\xee\x44\x96\xce\x2f\xad\xab\x25\x49\xe4\x6b\x7d\x73\x02\x51\x11\xf8\x5b\x40\x60\x96\x05\xe1\x78\x27\x62\xd5\x79\x6f\x72\xf3\x13\xef\xc0\xb3\x93\x93\x53\xcc\x77\x09\x5e\x9b\x2f\x49\x97\xb3\x30\x91\xd2\x6f\xdb\xd3\xbb\x9c\x0a\xef\x81\x19\x5f\x90\x92\x5e\x98\xcc\xe0\x45\x8f\x70\x7a\x56\x51\xa6\x2d\x1b\xe0\x84\x8f\x82\x79\x90\x21\x4d\x3d\x0b\x89\xe2\x3d\x3f\x5b\x52\x8b\x5c\x99\xdf\x69\x5a\xa4\x52\x5c\xc9\x74\x48\x29\xcc\xed\x8e\x39\x88\x2b\x54\x9e\x8a\xb0\x6d\x1d\x8d\xa8\x0e\xc3\x9f\xc6\x49\xca\xd4\xd7\x1f\x64\xe7\xca\xbb\xb1\x36\x7c\x67\x75\xbc\xc6\x4e\x63\x42\x1e\x0e\x8f\xaf\x87\x6b\x09\xe8\xf9\xc1\x7a\x0a\x89\xab\x76\xba\x67\x1c\xc1\xe0\xcf\x0e\x0f\xf6\x37\x52\xfa\xf8\xdb\x2e\x3a\xef\x23\x97\xe4\x4d\x94\x8d\xcd\x85\x0a\xf9\x81\x94\x49\xbd\x27\xc6\xc5\xb3\xd0\xb8\x14\xeb\xd6\x6a\x54\x36\x96\xac\xb2\xd9\x77\xbc\xc3\xf0\x58\xe5\x7b\xdb\xf5\x82\xbc\x5d\x44\x5d\x0a\xd8\x4a\x5d\xd3\x28\xc9\x20\xec\x86\x73\x66\x99\x66\xe4\x25\x30\x9e\xd9\xa0\x78\x79\xc3\x62\x3f\xd1\xf3\x3f\xa7\xd4\xc4\x1c\xa3\x8e\x04\x73\x56\x1c\x21\xae\xb2\xa9\x1b\xa6\xe2\xbf\x4b\x64\x8c\xb8\x3e\x50\x5b\xca\x2c\x7f\xdd\x21\xbe\x47\x53\x66\x74\x3b\x7f\xdc\x35\x1c\x15\x62\x2e\x1a\x6d\x3c\x37\xf2\x2a\xf3\x84\xcb\x6e\xac\x51\x77\x45\x77\x33\xd4\xa0\x4e\xca\x5a\x8e\x6a\x9c\x4f\x64\x00\x30\x26\x85\x58\x74\xb3\xc1\x28\xd1\x0d\xbb\x66\xff\x21\xdc\x91\x4d\x99\x0d\xcb\xf9\x29\x84\x51\x55\x77\x49\x33\xca\x2a\xfd\xf5\xab\x32\x04\x3a\x4b\xc3\x7b\x25\xb2\xf5\xbd\x95\x6d\x41\x20\x5f\x6a\x3a\x31\x5c\x65\xb7\x80\xc9\xb0\x50\xc5\xa2\x09\x95\x7f\xcd\xfb\x7a\x12\xb8\xf8\x25\x95\x91\x6b\xa9\xb3\xfc\xca\x2e\xf0\x1d\x36\x76\xec\x6f\xfc\x4d\xab\xad\xfa\xba\x77\x9f\x84\x4f\xb5\x09\x91\x68\x32\x55\xf4\xb4\x15\x19\xd4\xc6\x3c\x3e\xee\xd8\x81\x0f\x20\xce\x6e\x7e\x75\xeb\xb2\x5d\x03\x27\xb5\x57\x77\x58\xe5\x4a\xfb\x6b\xa7\xcb\x6a\x4d\xca\x31\x3a\x1b\xb6\x6c\xcf\x21\x7f\x64\x00\x91\xa7\xfc\x2c\xb9\xfd\x1a\x40\x9c\xd0\x2a\x16\x97\x4e\x37\x45\x64\xb8\x2e\x84\xc6\xbc\xe0\xf0\x70\x50\x76\xf2\x92\x35\x2a\x2e\x5e\x1c\xa7\x46\x00\xd0\x5c\x3d\x72\x11\xf7\x40\xd7\xd5\x4f\xc7\x20\x1d\x54\x05\x00\x01\x37\x02\x70\x08\x30\xd1\xf4\x31\x55\xeb\xbd\xb0\x00\x14\x2d\x0e\x02\xa1\xaa\x54\x0e\x08\x44\x65\xf1\x43\x7c\xdc\x5d\x78\x4f\x0f\x2d\x5b\xf7\x96\xc9\x8f\xb0\x43\x3d\x0f\x51\x92\xf7\xf5\x4b\x32\x62\xbd\x41\x6b\x61\xdf\x65\x3c\x0e\x2e\xe6\xc1\xbc\xc1\x4d\x7c\xe2\x2f\x0d\x5a\x43\x93\xef\xd2\xd5\x00\xbe\x0f\xd4\xec\xdd\x0e\x5b\x63\x99\x2d\x97\xf6\x0e\xe5\xdf\x79\x8f\xf0\x89\x1a\x51\xdf\x2c\xad\xb8\x0d\x92\xf7\x4e\xe0\xf5\x84\xd2\x5a\xac\x1f\x3d\x2e\x77\x5a\x79\xe6\x45\xcf\x71\xed\xa2\x6d\xd7\x6c\x17\x63\xf6\x33\xfd\xb8\xc3\xed\xe3\x19\xa2\x0b\x83\x75\x66\x89\x6c\xde\x7b\x51\xb6\xc9\xa8\xc3\xac\x42\x31\x22\xc8\xa2\xf6\xf9\x2a\xad\x84\xb6\xad\x92\x38\x70\x9e\xa9\x82\xa3\xd9\x71\x77\xbe\x6d\xbc\x06\x3f\x2a\x54\x86\x82\xb3\x12\x4a\x41\x1b\xd6\x8b\x00\x81\xf4\xb6\x03\xd5\x0e\xdd\xea\x1f\x87\x71\x0b\x96\xd2\xbe\xac\x01\x46\x7f\x93\x28\xa4\x28\x38\xdd\x2d\xa8\xf1\x4c\x01\xb5\x2b\xd1\x16\x7d\xd3\xdd\x25\xe8\x1f\x29\x7d\xda\x0d\x25\x6a\xbe\x68\x76\xc8\xb9\x28\xe2\x91\xe2\xeb\x26\x4e\xdf\xdc\xe3\xea\x97\xff\x28\x82\x57\x3b\x18\xe9\x0f\x07\xbe\xc8\x87\x4c\x99\x73\x64\xca\x49\x72\x85\x85\x37\xbc\x47\x2f\xa3\xca\xc4\xd3\x4e\x37\x95\x26\x28\x15\x48\xf4\x70\x26\x2d\xff\x52\xe5\xe3\x09\x94\xa3\x9c\x57\xd9\x88\xec\xda\x51\x32\xd8\x2c\x6f\xa7\x36\xc6\xa1\xcd\x4d\xd8\xcc\x13\x96\x8a\xf4\x47\xbc\x25\xeb\x28\xf6\xb3\x1d\x46\x76\x38\xdb\x51\xc7\x91\x00\xa7\x3e\xf9\x1e\xe1\xcc\xfe\xf8\xc1\x70\x26\xb6\xb8\xfe\x85\xe6\x92\xa0\x36\xfd\x35\x0b\xc3\xd0\x9a\xb2\xfc\x90\xbe\x47\x07\x28\xdd\x88\xeb\x6b\x0b\x95\xf4\xf2\x2c\xe7\x96\x25\x3d\x91\xbe\x2d\x92\xfe\x0c\xf5\x19\xf3\x04\x3b\x38\xec\x4c\x29\x54\xe5\xa1\x89\x9e\xa2\xf5\x32\xd7\xe0\x96\x65\xdd\x70\xaf\x90\xf0\x7a\x31\x08\x6e\x2f\xb5\xcb\xe7\xd8\xcc\xb6\x63\x8a\x4d\x26\x77\x69\x82\x63\x36\x52\xad\x51\xd1\x0c\x97\xf6\x7a\xe1\xa6\x6c\x45\x67\x82\x05\xa7\xaf\xb1\xf7\x8e\x1a\xed\xc8\x91\xc1\x86\xeb\xf8\x85\xfe\xbc\x09\x66\x1d\x1b\xef\x6f\x96\x6f\x5f\x75\xe3\xd9\xa4\x06\xb9\xf5\x64\x6e\xe4\xdb\x4b\x8d\xba\xac\xe8\x30\xbf\xd2\x67\x9f\xd8\x0b\xa6\x1f\x5d\xb9\x78\x2e\x47\x6f\x19\x7b\xa1\xed\x16\x35\xcb\xe1\xee\xc5\x33\xdd\x3c\xe3\x17\x45\x9b\xdf\x39\x7b\x9f\x9f\xdb\xb7\xf8\x60\xf7\x0b\xc9\x9f\x7c\xe3\x97\xbd\xf4\xad\x4f\x4b\xf0\x48\x1c\xf9\x0b\x96\x68\x09\xff\x3f\x66\xff\x0d\x00\x00\xff\xff\x65\xe9\x01\xd4\xf1\x06\x00\x00")

func insecure_csr() ([]byte, error) {
	return bindata_read(
		_insecure_csr,
		"insecure.csr",
	)
}

var _insecure_pem = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x96\xc9\xb2\xab\x3c\xb2\x85\xe7\x3c\xc5\x9d\xef\xb8\x81\xe9\x8c\x19\x4a\x20\x3a\x5b\xb2\xe9\x9b\x99\x01\xd3\xf7\xa6\x31\x7e\xfa\x8a\x7d\xce\x5f\x83\xaa\xd2\x30\x57\x2a\x52\xb9\x42\x5f\x46\xfe\xff\xef\x81\x48\x33\xc8\xff\xc9\xc8\x76\x0d\xd5\x90\x81\x8b\xfe\x44\x29\x6c\x18\x9a\x59\xcb\x32\x04\xe7\x02\xec\x06\x04\x85\x61\xa4\xdd\xfd\xe6\x8e\x01\x92\xc6\x7d\x57\xac\xc8\xbc\x0e\xb1\x51\x6e\x29\x01\x16\x22\xd0\x02\x7b\xf1\x34\x3e\xf2\x17\x98\xb0\x20\x3e\x05\x41\xe4\x82\xd6\x77\xb1\x8d\x77\x64\x45\x8a\x6f\x59\x06\xda\x47\x25\x0a\x3e\x63\xdc\x49\x47\xd2\xb5\x25\xb6\xa3\x5d\x05\x7f\x34\x1d\xed\x8c\x1b\x05\x7c\x61\xf7\x66\x99\x74\x64\xa4\x52\x96\x6c\xd8\x3e\xed\xda\xfe\x27\xe1\x8a\x3e\xb6\x99\xf4\xa4\x8d\x38\xff\x88\x1d\xa8\xc4\xa1\x79\x7a\x06\xf1\x18\xb1\xea\x29\x76\xd1\x82\xe5\xb7\x06\x18\x0f\xc9\x1f\xdc\xd8\x9d\x74\x50\x86\x0a\x8f\x67\x18\x97\x99\xe6\x15\xae\x26\xd5\x51\xb0\x17\x16\x2b\x2d\x49\xe8\xaf\xcf\x80\x94\x99\xd6\x6e\x49\x05\x1f\x49\xf7\x11\xb0\x5d\xec\x6a\xf1\xa7\x90\x82\x76\xe9\x9d\xb0\xa4\xa4\x12\xad\xdc\x52\xce\x3a\x63\x17\xec\x77\x05\xec\x7a\x99\x12\x5c\x83\x1d\xbb\x80\xc7\x6e\xc4\x10\xd7\x13\x82\x7f\x62\x44\x01\x3c\xae\xf1\x8e\x15\x4f\x08\x6a\x19\x0e\x35\xba\x51\x18\x34\x7f\x9e\x04\x4b\x2c\xfb\x3e\xfe\xa0\x2f\xb0\x7f\xcd\x81\xa0\x70\xe5\x86\x94\x89\xd6\x76\x09\x67\xae\xcf\x00\x7d\xd4\x1a\x78\x7f\xb5\xd4\x55\x7c\x52\x26\x15\xd4\xa8\xb4\x53\xd7\x88\x6d\xbf\x11\x7b\xf9\xe8\x2e\x48\xfe\x26\x0c\xae\x8a\xda\x35\x65\xfd\x3a\x0b\xcd\xd6\x40\xa4\x4d\x7b\x7b\x8c\xbb\xb6\x8e\x42\xbb\xc5\xce\x69\xbf\xfe\xf5\xec\x46\xa1\xc3\xd6\x12\xce\x28\x3c\xdd\x1c\xb3\x4e\x3d\xc5\x0e\xc4\xbf\xbd\x25\x32\x54\x12\x96\x59\xb2\x40\xf8\x63\xe0\x33\x90\x56\x03\x49\x6b\xa2\x37\x1f\x4d\x01\xc1\xdf\x42\xd8\xa5\x14\xf6\xb3\x45\xac\xfa\x7e\x6a\xd2\x37\x53\x86\x0f\xfe\xed\x53\x91\x65\x50\x19\xff\xfd\x07\x20\xb4\x80\x52\x14\xc6\x03\xfc\xea\xc5\x20\x17\x85\x01\x29\x70\xd3\x41\xbf\x0e\xaf\x64\x1d\x9f\x91\x17\x59\x4e\xd6\xd1\xf1\xd8\xcd\x7b\x17\x20\xcf\xb3\xae\x68\xe2\x25\xcb\x4a\xf1\x0d\x13\x38\x8e\x76\x50\x93\xc2\x91\x7d\x93\x7b\x09\xa4\xbc\x29\xfe\x4c\x21\x14\xf7\x36\xd1\x23\xa3\x9b\x0d\x6f\x88\x47\xbf\xf0\x3b\xe7\x9e\x4c\x97\xb8\x21\x6c\xbe\xd6\x1f\xa5\x09\xbf\x56\xb2\xf9\x47\x84\xc6\x49\x69\x76\x3e\x7a\x2b\xaa\x22\x7c\x37\x31\x0b\xe7\xbe\xa4\xf6\xb0\x31\x4d\x32\x2d\x0d\xf7\xe2\xd6\x2f\xda\xb9\x34\xfb\x9a\x55\x0f\xfc\x16\xbe\xcf\xe1\xa6\x24\xa6\x97\x17\xe9\xfd\x7c\x0e\x87\x82\x7e\xdf\xd0\xa6\xa7\x49\x67\xdf\xd3\x88\x36\xd7\xa0\x42\x0b\x85\x7f\x4e\xd2\xd5\x10\xda\x3c\x7a\xe6\xd0\xb8\x6a\xf9\x75\x71\xa7\x59\x64\x8c\x3c\xf7\x0a\xa1\x93\x06\x3d\xd9\xc2\x2a\xf4\x1d\x89\x11\x1e\xfe\x49\x38\x7c\xf3\x12\x8b\xf9\x23\x3e\x1b\xbc\xea\xe5\x19\x25\x29\xcd\xb7\x65\xfb\x45\xf7\x47\x6f\x33\x52\x0e\x77\xfa\x25\x5a\x97\x09\x88\x0c\xf3\x92\x60\x28\x9f\x92\xfb\xf9\x32\x7e\x73\x82\xaa\xe5\x23\xe3\x20\xb8\x1a\x59\x95\xde\x2f\x6f\x5a\x1d\x87\x66\xa1\x16\x1e\x6c\xe5\x94\x66\xe6\x7a\xe3\x9c\xdd\x36\x09\x8d\x02\x33\xd5\xdf\x55\x9d\x6c\x1a\xd0\x23\xe7\x14\xed\xc3\x7b\xcf\x08\x73\x2e\x23\x2d\xb6\xaa\x47\xf3\x39\x1f\x21\xb0\xd9\x62\x4f\xde\x83\x40\x6d\xe2\x5d\x95\x8b\xfc\x39\x1e\x46\x57\x6b\x62\x6e\x0a\x4b\xa1\xce\x0f\xc7\xa8\x2e\xe9\xa8\xce\x97\xad\xd7\x1b\x76\x93\xe5\x6a\xd6\x52\x08\xf3\x94\xa4\xb6\x3a\xa5\x8b\xf8\x23\xba\xd7\xf1\xc1\x3f\x28\x12\x89\xcd\x71\x3b\xa9\xa4\x85\xf0\x29\x6b\x7e\x75\x2d\xa2\x7a\xb2\xef\x50\xf0\xc0\xcc\x8d\xca\x9d\x8b\x27\x86\x15\xce\xe4\xfb\x74\xbb\x5e\x77\xbd\x9a\x15\xdc\x65\xb6\xbd\xda\x7e\xf6\x97\xe7\x41\x99\xdc\xad\x4e\x3c\xc7\x4d\x5f\x85\xf6\xe8\xd5\xb3\x15\x23\x88\x69\x26\xbd\x9c\xed\x97\xdd\xc9\x67\xd9\xd6\xef\x71\x19\x16\x95\xe9\x3f\x9b\xbd\xa6\x11\x9f\x46\x32\x5a\xa7\x5a\x24\xa9\xa4\xf0\x80\x72\x46\x75\xbb\x06\xec\x2a\x5e\x53\x14\x3c\xae\x21\x60\xce\xdc\x78\x67\xbd\x21\xaa\xf4\x34\xce\x7f\x86\x37\x1f\x9d\x47\xef\x06\x07\xf0\x6c\x37\x95\xd7\xe8\x6b\x0a\xb3\x7a\xa8\xed\x8c\xff\x09\xda\x84\xca\x02\x76\x8b\xfa\xed\x23\xe7\x3c\x4d\xb3\xad\x59\x31\xf1\xd7\x30\x9c\xaa\x33\x30\x04\x07\x73\x7b\xbd\x1d\xc9\x1a\x86\xf2\x27\x5c\x7d\x50\x60\x08\x80\x56\x87\x35\x4c\x31\xe0\x7f\x29\xce\x28\x65\x47\x90\xde\x2d\x04\x76\x43\x1d\x14\x90\xfd\x42\xa2\x3b\x1e\xfa\x8b\x6e\x31\xc3\x02\xa9\xd0\x4a\x15\x60\x45\xc6\x75\x8f\x20\xb4\x3c\x1d\xec\xc6\xae\xfc\x8e\x38\xfb\xe4\x52\xc0\xd2\x69\x08\x8c\x1d\xfc\xfb\xb2\xc5\x23\xb5\xb0\x3c\xef\xc2\x58\xe7\xf4\xb4\x4e\x03\xe3\x5b\xd8\x49\xef\xaf\x36\x25\x17\x9f\xc7\x2c\xff\x1f\x90\x51\xff\x4c\xda\x5f\xca\x20\x00\xde\xf7\x67\xdc\xe2\xef\xa8\x7c\x9a\xed\x22\x20\x5e\x40\x5d\x45\xfa\xf2\x0a\x0f\x12\x3c\xb3\xb0\x39\xb7\x8b\xf7\xb8\x05\xc9\x8a\x2d\x67\x40\xdb\x0f\xd8\xa9\x4f\xb7\x86\xc2\x3a\xa6\xb7\xe0\xe2\xbf\xbd\x6d\x19\x1e\xdd\x7d\x3f\x0a\x7b\x53\xee\x4f\xe0\xd4\x62\xbc\xc9\x45\x74\x73\xa3\x94\x4f\xa7\x71\x50\xb9\x49\xca\xba\x6e\x3a\x73\xaf\xd3\xc3\x63\xc2\x99\xa3\x0c\x37\x65\xb4\x47\x91\x3c\x01\x68\x6d\xbc\x6a\x6f\x7c\x0f\x7b\x5d\x88\xa0\xe4\x17\x76\x74\x0d\x94\x2e\x2d\xb3\x57\x5f\xa8\xbc\x44\x1b\xf3\x84\x17\xf1\x11\xf0\x22\x8e\x7d\x4b\x50\x4e\x5f\x73\xa5\x18\xff\x21\xdd\xed\x1c\x35\xce\xc5\x7b\x7c\xcb\x40\xb9\x4f\x3d\x96\x46\x17\xf9\xd3\x70\x9d\x60\xee\xb6\xf9\x97\x1e\xde\xf9\xfb\x25\x71\xaf\x41\x24\x4c\x43\x2c\xb7\x27\xe3\x5c\x6a\x3f\xee\x5a\xb1\x14\x83\x83\x50\x64\xea\xde\x9e\xaa\x3b\xa8\xa5\xfa\x43\x1a\xf6\xe1\xf8\xb3\x1d\x11\xd1\xa0\x1f\x9d\xd7\x1e\xef\xf9\x35\x1e\x91\x3e\x16\x4a\x6e\x8c\x45\x3d\xd2\x43\xd7\xd8\x4b\xc1\x27\x55\xaf\x4e\xd4\xf5\x85\x0e\xce\x1d\x7f\xe2\xf1\x45\x7e\x3e\x23\x7e\x3f\xce\x2d\x74\xc6\x97\x70\xc9\xd2\x87\x14\xd6\xc2\xce\x16\xfa\xe0\xf8\xd3\x68\x4e\xba\x51\xcf\x1a\xaa\xa2\xbd\xbc\xc9\x58\xba\x6a\x1c\xf7\x8c\x29\x75\xbf\x74\xc5\x93\x99\x00\x6a\x77\x9b\xcd\x8c\x17\x1b\x56\x6d\xcd\x6b\xf1\xd0\x2f\xec\xe3\xfb\x4e\xb5\x3e\x3c\x58\x9b\x3b\x3b\xcd\x3c\xa8\x15\x64\xbe\xad\x78\xf7\x06\x70\xd7\xec\x95\x56\x6b\x44\xed\x0b\x56\xcd\x9b\x37\xc0\xc3\x39\x49\xae\xda\x09\xa7\xae\x8b\x4a\x51\x2e\x66\x84\x4d\x82\x38\x62\x7e\xc5\xf5\x8e\x84\x77\xef\x9f\x64\x37\xac\x93\xb1\x5d\xe4\x0f\xb3\x89\x75\x9b\x3d\xdb\xf5\xa0\xea\x43\xef\x16\x9a\xa7\xb5\xac\x30\xb3\xca\xb6\x14\xf3\x2a\x26\xf3\x4c\x4f\x12\x39\x09\x36\x90\x0a\xee\x1c\x18\x42\xae\x0a\x79\xc5\xcb\x49\xfd\xea\xb2\x4f\x35\x59\x4c\xec\x1a\x2b\x8c\x89\x3f\x53\xee\x92\x07\x2e\xa0\x21\xa9\x00\xfd\x55\x5f\xde\x34\xed\x16\x4e\xfb\xf9\xf4\xe3\xbe\x68\xfc\x70\x80\x30\x1f\x28\xbc\xea\x97\x52\x31\xda\x04\x1a\x42\x55\x5a\x5b\x47\xc2\x53\x73\xdc\x2c\xe4\x10\xca\xb3\xac\x60\xb4\xbc\xbd\x88\x88\x87\x9a\xd8\xa9\x79\xcf\xb8\x3d\x4f\xcb\x89\x9c\x49\xa3\x5e\xd4\x48\xba\x4a\xe2\x3b\xa6\x2f\x56\xc6\x56\x71\x0c\x57\x35\x3f\xf5\x22\x58\xa9\x3f\xeb\x05\x22\xca\xff\xae\x1c\xff\x0a\x00\x00\xff\xff\x44\x91\x95\xd7\x8f\x08\x00\x00")

func insecure_pem() ([]byte, error) {
	return bindata_read(
		_insecure_pem,
		"insecure.pem",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"insecure-key.pem": insecure_key_pem,
	"insecure.csr":     insecure_csr,
	"insecure.pem":     insecure_pem,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"insecure-key.pem": &_bintree_t{insecure_key_pem, map[string]*_bintree_t{}},
	"insecure.csr":     &_bintree_t{insecure_csr, map[string]*_bintree_t{}},
	"insecure.pem":     &_bintree_t{insecure_pem, map[string]*_bintree_t{}},
}}
